---
- name: ensure dockerfile directories exist
  file:
    path: "{{ item }}"
    owner: "{{ ansible_ssh_user }}"
    state: directory
  with_items:
    - "{{ ansible_env.PWD }}/.ansible_cache"
    - "{{ ansible_env.PWD }}/.ansible_cache/docker"

- name: synchronize role to remote cache for Dockerfile build
  synchronize:
    src: ../
    dest: "{{ ansible_env.PWD }}/.ansible_cache/docker/glance"
    archive: no
    checksum: yes
    recursive: yes

- name: ensure docker image configuration directory exists
  file:
    path: "{{ item }}"
    owner: "{{ ansible_ssh_user }}"
    state: directory
  with_items:
    - "{{ ansible_env.PWD }}/.ansible_cache/docker/glance/provisioning/group_vars"

- name: update configuration used to build docker image from template
  template:
    src: ansible_cache/docker/glance/provisioning/group_vars/all.yml
    owner: "{{ ansible_ssh_user }}"
    dest: "{{ ansible_env.PWD }}/.ansible_cache/docker/glance/provisioning/group_vars/all.yml"

- name: ensure glance docker image has been built
  docker_image:
    name: "{{ glance_docker_username }}/{{ glance_docker_imagename }}"
    path: "{{ ansible_env.PWD }}/.ansible_cache/docker/glance"
    state: present

- name: ensure glance data container exists
  docker:
    image: "{{ glance_docker_username }}/{{ glance_docker_imagename }}"
    name: "{{ glance_docker_containername }}_data"
    command: >
      ansible-playbook 
        -i inventories/local.ini provisioning/configure.yml -e '{ 
          "openstack_log_dir" : "{{ openstack_log_dir }}",
          "openstack_log_verbose" : "{{ openstack_log_verbose }}",
          "openstack_log_debug" : "{{ openstack_log_debug }}",
          "openstack_mysql_host" : "{{ openstack_mysql_host }}",
          "openstack_mysql_port" : "{{ openstack_mysql_port }}",
          "openstack_mysql_glance_password" :
            "{{ openstack_mysql_glance_password }}",
          "openstack_identity_endpoint_host" : "{{ openstack_identity_endpoint_host }}",
          "openstack_identity_internal_url" : "{{ openstack_identity_internal_url }}",
          "openstack_identity_glance_password" : 
            "{{ openstack_identity_glance_password }}" }'
    detach: no
    state: present

- name: wait until configuration is completed
  command: docker wait "{{ glance_docker_containername }}_data"
  register: docker_wait
  changed_when: false

- name: collect configuration log
  command: docker logs "{{ glance_docker_containername }}_data"
  register: configure_log
  changed_when: false

- name: display configuration log
  debug:
    msg: "{{ configure_log.stdout_lines }}"

- name: fail on configuration failure
  assert:
    that: docker_wait.stdout == "0"

- name: ensure glance service is running
  docker:
    image: "{{ glance_docker_username }}/{{ glance_docker_imagename }}"
    name: "{{ glance_docker_containername }}_server"
    volumes_from: "{{ glance_docker_containername }}_data"
    ports:
      - 9191:9191
      - 9292:9292
    detach: yes
    state: running

